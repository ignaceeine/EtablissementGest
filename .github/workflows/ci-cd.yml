name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Récupération du code source depuis le SCM
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2: Configuration de PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug

      # Étape 2 (suite): Préparation pour le build
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      # Étape 2 (suite): Installation des dépendances PHP
      - name: Install PHP dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      # Préparation de l'environnement de test
      - name: Prepare the application
        run: |
          cp .env.example .env
          php artisan key:generate

      # Configuration de la base de données SQLite pour les tests
      - name: Configure SQLite Database
        run: |
          php artisan config:clear
          touch database/database.sqlite
          php artisan migrate --force
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite

      # Étape 3: Exécution des tests unitaires
      - name: Run unit tests
        run: vendor/bin/phpunit --testsuite Unit

      # Étape 4: Préparation pour les tests IHM avec Laravel Dusk
      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      - name: Install Matching ChromeDriver
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP "Chrome \K[0-9]+")
          php artisan dusk:chrome-driver $CHROME_VERSION

      - name: Start Chrome Driver
        run: |
          ./vendor/laravel/dusk/bin/chromedriver-linux &
          php artisan serve &
        env:
          APP_URL: "http://127.0.0.1:8000"

      # Étape 4 (suite): Exécution des tests IHM avec Laravel Dusk
      - name: Run browser tests
        run: php artisan dusk
        env:
          APP_URL: "http://127.0.0.1:8000"

      # Étape 5: Vérification de la qualité logicielle avec PHPStan
      - name: Run PHP Static Analysis
        run: vendor/bin/phpstan analyse --memory-limit=2G

      # Génération des rapports de couverture des tests (optionnel)
      - name: Generate test coverage report
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      # Publication des rapports de couverture (optionnel)
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false
